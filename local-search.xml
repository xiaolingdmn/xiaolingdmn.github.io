<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>11. 盛最多水的容器</title>
    <link href="/2023/12/21/questions/question11/"/>
    <url>/2023/12/21/questions/question11/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><span id="more"></span><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><pre><code class="hljs">给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。返回容器可以储存的最大水量。说明：你不能倾斜容器。</code></pre><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p><img src="/images/question/question_11.jpg" alt="示例1"></p><div class="note note-info">            <p>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49<br>解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p>          </div><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><div class="note note-info">            <p>输入：height &#x3D; [1,1]<br>输出：1</p>          </div><h2 id="答题"><a href="#答题" class="headerlink" title="答题"></a>答题</h2><p>看到题目的第一反应是双循环  根据题意 较小的值 乘以相距的距离可以得到面积（也就是蓄水量） 但后续好像不知道该怎么去移动因为循环是同步进行的 无法停止移动较小的那个值  PASS</p><p>后来仔细想了一下 得出思路好像可以一个循环 从两端往中间移动  然后移动较小的那个值  因为较大的值并不会影响面积大小 然后每次移动都与上一次面积比较 最终得出最大面积为多少 也就是最大蓄水量为多少  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number []</span>&#125; <span class="hljs-variable">arr</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span>  &#123;<span class="hljs-type">number</span>&#125;  </span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">WaterS</span>(<span class="hljs-params">arr = []</span>) &#123;<br>    <span class="hljs-keyword">const</span> length = arr.<span class="hljs-property">length</span>;<br>    <span class="hljs-keyword">let</span> left = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> right = arr.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">let</span> sh = <span class="hljs-number">0</span><br>    <span class="hljs-comment">// try catch 为了捕获非数组异常场景 </span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (!length || !<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(arr)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;当前数组为空或者数据不规范&#x27;</span>)<br>        &#125;<br>        <span class="hljs-comment">// 以下为关键代码</span><br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">const</span> leftdH = arr[left];<br>            <span class="hljs-keyword">const</span> rightH = arr[right];<br>            <span class="hljs-keyword">let</span> curSH = leftdH &lt; rightH ? (right - left) * arr[left++] : (right - left) * arr[right--]<br>            sh = sh &gt; curSH ? sh : curSH<br>        &#125;<br>        <span class="hljs-keyword">return</span> sh<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;error---&#x27;</span>, error)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">const</span> hArr = [<span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>]<br><span class="hljs-keyword">const</span> result = <span class="hljs-title class_">WaterS</span>(hArr);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;===最终获得面积 &#x27;</span>, result);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数组</tag>
      
      <tag>双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>3. 无重复字符的最长子串</title>
    <link href="/2023/10/08/questions/question3/"/>
    <url>/2023/10/08/questions/question3/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><span id="more"></span><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><pre><code class="hljs">给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串的长度。</code></pre><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a>示例 1:</h2><div class="note note-info">            <p>输入: s &#x3D; “abcabcbb”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</p>          </div><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a>示例 2:</h2><div class="note note-info">            <p>输入: s &#x3D; “bbbbb”<br>输出: 1<br>解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</p>          </div><h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3:"></a>示例 3:</h2><div class="note note-info">            <p>输入: s &#x3D; “pwwkew”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>    请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。</p>          </div><h2 id="答题"><a href="#答题" class="headerlink" title="答题"></a>答题</h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p>思路：遍历字符串用依次放入空数组中去，并取得先前长度与当前数组长度取最大值，一旦发现有重复字符，数组就删掉第一个字符，直到没有重复为止，再重新添加字符到数组中去。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-keyword">const</span> maxRepeatStrLong = <span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">let</span> maxLength = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> empty = [];<br>    <span class="hljs-keyword">if</span> (s.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//极端情况</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (!empty.<span class="hljs-title function_">includes</span>(s[i])) &#123; <span class="hljs-comment">// 判断数组中是否存在字符</span><br>            empty.<span class="hljs-title function_">push</span>(s[i]); <span class="hljs-comment">//  不存在 就往数组中添加该字符</span><br>            maxLength = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(maxLength, empty.<span class="hljs-property">length</span>); <span class="hljs-comment">//   取族最大长度作为返回值</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 数组中存在 从左往右依次删除</span><br>            <span class="hljs-keyword">while</span> (empty.<span class="hljs-title function_">includes</span>(s[i])) &#123;<br>                empty.<span class="hljs-title function_">shift</span>();<br>            &#125;<br>            empty.<span class="hljs-title function_">push</span>(s[i]) <span class="hljs-comment">//删完之后 将当前字符添加至数组中</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> maxLength;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>思路：滑动窗口不断向前，当前元素不在set中 就加入set 然后更新最大长度，i++继续下一轮循环，set中有重复元素不断让j++ 并删除窗口之外的元素 直到滑动窗口内没有重复的元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">s</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> lengthOfLongestSubstring = <span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) &#123;<br>    <span class="hljs-keyword">const</span> set = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(); <span class="hljs-comment">// 判断滑动窗口内是否有重复元素</span><br>    <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, <span class="hljs-comment">// 滑动窗口右边界</span><br>        j = <span class="hljs-number">0</span>, <span class="hljs-comment">// 滑动窗口左边界</span><br>        maxLength = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (s.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<span class="hljs-comment">//极端情况</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (i; i &lt; s.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (!set.<span class="hljs-title function_">has</span>(s[i])) &#123;<span class="hljs-comment">// 当前元素不在set中 就加入set 然后更新最大长度，i++继续下一轮循环</span><br>            set.<span class="hljs-title function_">add</span>(s[i]);<br>            maxLength = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(maxLength, set.<span class="hljs-property">size</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// set中有重复元素不断让j++ 并删除窗口之外的元素 直到滑动窗口内没有重复的元素</span><br>            <span class="hljs-keyword">while</span> (set.<span class="hljs-title function_">has</span>(s[i])) &#123;<br>                set.<span class="hljs-title function_">delete</span>(s[j]);<br>                j++;<br>            &#125;<br>            set.<span class="hljs-title function_">add</span>(s[i]); <span class="hljs-comment">// 放心将s[i]加入set中</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> maxLength;<br>&#125;;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
      <tag>滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近况小结</title>
    <link href="/2023/07/23/daily/daily/"/>
    <url>/2023/07/23/daily/daily/</url>
    
    <content type="html"><![CDATA[<h2 id="叮咚-这是一份近期小结"><a href="#叮咚-这是一份近期小结" class="headerlink" title="叮咚~~ 这是一份近期小结"></a>叮咚~~ 这是一份近期小结</h2><span id="more"></span><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>  生活上面的话最近好像又有一点点肥了，致力于嘴上的减肥行动从未停止过，嘴上一直有点焦虑。吃喝拉撒还是蛮正常的，唯一不足的感觉就是好像有点缺乏运动了，本来每周的游泳计划好像也因为种种原因，上周也没有去成，但是上周休息日也还是有运动滴，上周末的话有跟高中的老朋友一起去打了羽毛球，他还是那么猛，我跑两步就气喘吁吁，不行了。希望接下来的生活能过的好一些吧，尽量多运动运动吧。</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>  工作的话最近好像也没有什么可聊的，基本上就是尽力做好本职工作吧，服从领导的工作安排，不过有一说一我的领导们都对我还挺不错的，在此还是衷心的感谢一下领导们的抬爱吧，然后的话就是技术学习方面的话，我好像已经很久很久没有更新过自己的技术了，最近也是慢慢的开始更新一下自己的技术吧，说是更新技术，不如说是熟悉一下目前流行的一些框架文档吧，毕竟咱也不是铁饭碗不，说不定哪天就不在这待了呢，还是得学习一下的，不过我好像一直以来都不太喜欢学习，但是吧没办法咯，世事难料嘛，希望接下来能更新一下自己的技术库吧，以备不时之需咯</p><h2 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h2><p>  这个的话那确实是莫得办法咯，哈哈哈哈哈哈哈哈哈哈哈，自从去年发生一些不太友好的事情之后呢，过了这么久感觉好像也就那样吧，顺其自然咯，最近有认识到一些的朋友的朋友，经常一起玩游戏什么的，感觉还蛮不错的，对了之前有跟朋友聊过一起去干点别的事情看看怎么样，因为真的不想打工了，还有最最最重要的原因就是真的不想早起挤地铁了，好像找不到工作的意义，辛苦费也不是那么理想，不过鉴于目前所谓的大环境趋势，这个想法还处于萌芽期。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>  总的来说的目前就是一切还算是蛮正常的，希望接下来能变得更好一些吧</p>]]></content>
    
    
    
    <tags>
      
      <tag>小结</tag>
      
      <tag>近况</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>认识 Hexo</title>
    <link href="/2023/06/01/intro/intro/"/>
    <url>/2023/06/01/intro/intro/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo  ？"></a>什么是 Hexo  ？</h2><p>  Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><span id="more"></span><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>  安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="https://nodejs.org/en">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="https://git-scm.com/">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo 步骤。</p><p>如果您的电脑中尚未安装所需要的程序，请自行 <a href="https://www.baidu.com/">百度</a> 查看安装过程</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>  所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。     </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo init &lt;文件名&gt;<br>cd 文件名<br>npm install<br>npm run  server<br></code></pre></td></tr></table></figure><p>  如果您在使用过程中遇到问题，请查看 <a href="https://hexo.io/zh-cn/docs/">官方网站</a></p>]]></content>
    
    
    <categories>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
